{"version":3,"file":"royal-caribbean-demo.min.js","sources":["../../node_modules/tslib/tslib.es6.mjs","../../src/room/RoomDetailsController.ts","../../src/room/RoomBoardController.ts","../../src/room/RoomAspectTrait.ts","../../src/room/RoomEntityTrait.ts","../../src/room/RoomsRelationTrait.ts","../../src/types.ts","../../src/deck/RoomController.ts","../../src/deck/RoomListController.ts","../../src/deck/DeckBoardController.ts","../../src/deck/DeckAspectTrait.ts","../../src/deck/DeckEntityTrait.ts","../../src/deck/DecksRelationTrait.ts","../../src/ship/ShipAspectTrait.ts","../../src/ship/ShipEntityTrait.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { TimeTableController } from \"@nstream/widget\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { ValueDownlink } from \"@swim/client\";\nimport { Value } from \"@swim/structure\";\nimport { HtmlView } from \"@swim/dom\";\nimport { Property } from \"@swim/component\";\nimport { Uri } from \"@swim/uri\";\n\n/** @public */\nexport class RoomDetailsController extends TimeTableController {\n  constructor() {\n    super();\n    this.initView();\n\n    const query = window.location.search;\n    const urlParams = new URLSearchParams(query);\n    let host = urlParams.get(\"host\");\n    const baseUri = Uri.parse(document.location.href);\n    if (!host) {\n      host = baseUri\n        .base()\n        .withScheme(baseUri.schemeName === \"https\" ? \"warps\" : \"warp\")\n        .toString();\n    }\n\n    this.infoDownlink.setHostUri(host);\n  }\n\n  initView() {\n    this.panel.insertView();\n  }\n\n  @ViewRef({\n    viewType: HtmlView,\n    extends: true,\n    get parentView(): View | null | undefined {\n      return this.owner.panel.attachView();\n    },\n    createView(): HtmlView {\n      const divView = new HtmlView(document.createElement(\"div\")).set({\n        style: {\n          margin: 24,\n        },\n        classList: [\"rbc-details-container\"],\n      });\n\n      const shipCodeView = divView.appendChild(\"p\").set({\n        style: {\n          marginTop: 12,\n          marginBottom: 12,\n          fontSize: 16,\n          fontFamily: \"sans-serif\",\n        },\n      });\n      shipCodeView.node.innerText = `Ship code: ${this.owner.shipCode.value.valueOf()}`;\n\n      const deckNumberView = divView.appendChild(\"p\").set({\n        style: {\n          marginTop: 12,\n          marginBottom: 12,\n          fontSize: 16,\n          fontFamily: \"sans-serif\",\n        },\n      });\n      deckNumberView.node.innerText = `Deck number: ${this.owner.deckNumber.value.valueOf()}`;\n\n      const roomNumberView = divView.appendChild(\"p\").set({\n        style: {\n          marginTop: 12,\n          marginBottom: 12,\n          fontSize: 16,\n          fontFamily: \"sans-serif\",\n        },\n      });\n      roomNumberView.node.innerText = `Room number: ${this.owner.roomNumber.value.valueOf()}`;\n\n      const hvacUnitView = divView.appendChild(\"p\").set({\n        style: {\n          marginTop: 12,\n          marginBottom: 12,\n          fontSize: 16,\n          fontFamily: \"sans-serif\",\n        },\n      });\n      hvacUnitView.node.innerText = `HVAC unit: ${this.owner.hvacUnit.value.valueOf()}`;\n\n      const hvacZoneView = divView.appendChild(\"p\").set({\n        style: {\n          marginTop: 12,\n          marginBottom: 12,\n          fontSize: 16,\n          fontFamily: \"sans-serif\",\n        },\n      });\n      hvacZoneView.node.innerText = `HVAC zone: ${this.owner.hvacZone.value.valueOf()}`;\n\n      return divView;\n    },\n  })\n  readonly detailsContainer!: ViewRef<this, HtmlView>;\n\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly shipCode!: Property<this, String>;\n\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly deckNumber!: Property<this, String>;\n\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly roomNumber!: Property<this, String>;\n\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly hvacUnit!: Property<this, String>;\n\n  @Property({\n    valueType: String,\n    value: \"\",\n  })\n  readonly hvacZone!: Property<this, String>;\n\n  @ValueDownlink({\n    laneUri: \"info\",\n    consumed: true,\n    didSet(value: Value): void {\n      if (!this.owner.panel.view?.getChild(\"detailsContainer\", HtmlView)) {\n        this.owner.shipCode.setValue(value.get(\"shipCode\").stringValue(\"\"));\n        this.owner.deckNumber.setValue(value.get(\"deckNumber\").stringValue(\"\"));\n        this.owner.roomNumber.setValue(value.get(\"roomNumber\").stringValue(\"\"));\n        this.owner.hvacUnit.setValue(value.get(\"hvacUnit\").stringValue(\"\"));\n        this.owner.hvacZone.setValue(value.get(\"hvacZone\").stringValue(\"\"));\n\n        this.owner.detailsContainer.insertView(this.owner.panel.attachView());\n      }\n    },\n  })\n  readonly infoDownlink!: ValueDownlink<this>;\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Trait, TraitRef } from \"@swim/model\";\nimport { TraitViewRef } from \"@swim/controller\";\nimport { PanelView, BoardView, BoardController } from \"@swim/panel\";\nimport { EntityTrait } from \"@nstream/domain\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { HtmlView } from \"@swim/dom\";\nimport { ValueDownlink } from \"@swim/client\";\nimport { Value } from \"@swim/structure\";\nimport { RoomDetailsController } from \"./RoomDetailsController\";\nimport { RoomListController } from \"../deck/RoomListController\";\n\n/** @public */\nexport class RoomBoardController extends BoardController {\n  constructor() {\n    super();\n    this.initBoard();\n  }\n\n  protected initBoard(): void {\n    const boardView = this.sheet.insertView();\n    const rootPanelView = this.panel.insertView();\n\n    const roomDetailsController = this.appendChild(\n      RoomDetailsController,\n      \"roomDetailsController\"\n    );\n    roomDetailsController.panel.insertView(rootPanelView);\n  }\n\n  @TraitViewRef({\n    extends: true,\n    viewDidMount(boardView: BoardView): void {\n      this.owner.consume(boardView);\n    },\n    viewWillUnmount(boardView: BoardView): void {\n      this.owner.unconsume(boardView);\n    },\n  })\n  override readonly sheet!: TraitViewRef<this, Trait, BoardView> &\n    BoardController[\"sheet\"];\n\n  @ViewRef({\n    viewType: PanelView,\n    extends: true,\n    get parentView(): View | null | undefined {\n      return this.owner.sheet.attachView();\n    },\n    createView(): PanelView {\n      return PanelView.create().set({\n        style: {\n          margin: 6,\n          backgroundColor: \"#212121\",\n        },\n        classList: [\"room-board-controller\"],\n      });\n    },\n  })\n  readonly panel!: ViewRef<this, PanelView>;\n\n  @TraitRef({\n    traitType: EntityTrait,\n    inherits: true,\n    initTrait(entityTrait: EntityTrait): void {\n      this.owner.hostUri.bindInlet(entityTrait.hostUri);\n      this.owner.nodeUri.bindInlet(entityTrait.nodeUri);\n    },\n  })\n  readonly entity!: TraitRef<this, EntityTrait>;\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Lazy } from \"@swim/util\";\nimport type { Graphics } from \"@swim/graphics\";\nimport { VectorIcon } from \"@swim/graphics\";\nimport type { SheetController } from \"@swim/sheet\";\nimport { AspectTrait } from \"@nstream/domain\";\nimport { RoomBoardController } from \"./RoomBoardController\";\n\n/** @public */\nexport class RoomAspectTrait extends AspectTrait {\n  constructor() {\n    super();\n    this.id.setIntrinsic(\"portal\");\n    this.title.setIntrinsic(\"Portal\");\n    this.icon.setIntrinsic(RoomAspectTrait.icon);\n  }\n\n  // Define the board controller to be used that will control all the widgets/cards the rooms will have\n  // We will use the 'RoomBoard' which is currently blank\n  override createTabController(): SheetController | null {\n    return new RoomBoardController();\n  }\n\n  // The icon to show the 'portal' (at the top - alternative to atlas)\n  @Lazy\n  static get icon(): Graphics {\n    return VectorIcon.create(\n      24,\n      24,\n      \"M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z\"\n    );\n  }\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\nimport { Class, Lazy } from \"@swim/util\";\nimport { EntityTrait, EntityTraitObserver } from \"@nstream/domain\";\nimport { Graphics, PolygonIcon, VectorIcon } from \"@swim/graphics\";\nimport { Model, TraitModelRef } from \"@swim/model\";\nimport { RoomAspectTrait } from \"./RoomAspectTrait\";\n\n/** @public */\nexport interface RoomEntityTraitObserver<\n  T extends RoomEntityTrait = RoomEntityTrait\n> extends EntityTraitObserver<T> {}\n\n/** @public */\nexport class RoomEntityTrait extends EntityTrait {\n  constructor() {\n    super();\n    this.icon.setIntrinsic(RoomEntityTrait.icon);\n  }\n\n  override readonly observerType?: Class<RoomEntityTraitObserver>;\n\n  // Aspect/Portal trait showing that this entity will have a board of widgets/cards\n  @TraitModelRef({\n    modelType: Model,\n    modelKey: \"portal\",\n    traitType: RoomAspectTrait,\n    traitKey: \"aspect\",\n  })\n  readonly portal!: TraitModelRef<this, RoomAspectTrait>;\n\n  // The icon of the entity, will be used in the navigation on the left\n  @Lazy\n  static get icon(): Graphics {\n    // return PolygonIcon.create(4);\n    return VectorIcon.create(\n      40,\n      40,\n      \"M3.333,3.333L36.667,3.333L36.667,36.667L3.333,36.667Z\"\n    );\n  }\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { type Value } from \"@swim/structure\";\nimport { MapDownlink } from \"@swim/client\";\nimport { RelationTrait } from \"@nstream/domain\";\nimport { RoomEntityTrait } from \"./RoomEntityTrait\";\nimport { Numbers, Observes, Strings } from \"@swim/util\";\nimport { TraitModelSet } from \"@swim/model\";\nimport { Uri } from \"@swim/uri\";\n\n/** @public */\nexport class RoomsRelationTrait extends RelationTrait<RoomEntityTrait> {\n  constructor() {\n    super();\n    this.title.setIntrinsic(\"Rooms\");\n    this.id.setIntrinsic(\"room\");\n  }\n\n  @TraitModelSet({\n    extends: true,\n    traitType: RoomEntityTrait,\n    observesTrait: true,\n    sorted: true,\n    initTrait(roomTrait: RoomEntityTrait): void {\n      // Create the room entity\n      const roomId = roomTrait.id.value!;\n      roomTrait.title.setIntrinsic(roomId);\n      const roomTraitNodeUri = this.owner.nodeUri.value + \"/room/\" + roomId;\n      roomTrait.nodeUri.setIntrinsic(roomTraitNodeUri);\n      roomTrait.portal.insertModel();\n    },\n    compareTraits(a: RoomEntityTrait, b: RoomEntityTrait): number {\n      // Sort the deck navigation by deck number\n      return Numbers.compare(\n        Number.parseInt(a.id.value ?? \"0\"),\n        Number.parseInt(b.id.value ?? \"0\")\n      );\n    },\n  })\n  override readonly entities!: TraitModelSet<this, RoomEntityTrait> &\n    RelationTrait<RoomEntityTrait>[\"entities\"] &\n    Observes<RoomEntityTrait>;\n\n  // Open a downlink to the backend to get the map of rooms, we can use this to create the navigation list\n  // The nodeUri of the downlink is inferred from the parent (the deck)\n  @MapDownlink({\n    laneUri: \"stateRooms\",\n    keyForm: Uri.form(),\n    consumed: true,\n    didUpdate(nodeUri: Uri, status: Value): void {\n      // If there is a new room then insert it into the relation/navigation\n      let roomTrait = this.owner.entities.get(nodeUri.pathName);\n      if (roomTrait === null) {\n        roomTrait = this.owner.entities.createTrait(nodeUri.pathName);\n        roomTrait.nodeUri.set(nodeUri);\n        this.owner.entities.addTrait(roomTrait);\n      }\n    },\n    didRemove(nodeUri: Uri, status: Value): void {\n      // When an room is removed in the backend, remove it from the navigation/relation\n      this.owner.removeChild(nodeUri.pathName);\n    },\n  })\n  readonly rooms!: MapDownlink<this, Uri, Value>;\n}\n","export enum OrderType {\n  OrderA = \"A\",\n  OrderB = \"B\",\n  OrderC = \"C\",\n  Unknown = \"Unknown\",\n}\n\nexport enum RoomStatus {\n  recentlyOccupied = 'recentlyOccupied',\n  ecoMode = 'ecoMode',\n  readyForPickup = 'readyForPickup',\n  pickupCompleted = 'pickupCompleted',\n}\n\nexport type ShipStatus = Record<RoomStatus, Record<OrderType | 'total', { count: number, value: number}>>;\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Property } from \"@swim/component\";\nimport { Form, Value } from \"@swim/structure\";\nimport { MapDownlink } from \"@swim/client\";\nimport { Feel, Look } from \"@swim/theme\";\nimport type { View } from \"@swim/view\";\nimport { ViewRef } from \"@swim/view\";\nimport { CellView, LeafView } from \"@swim/table\";\nimport { TextCellView } from \"@swim/table\";\nimport { TimeSeriesController } from \"@nstream/widget\";\nimport { RoomStatus } from \"../types\";\nimport { Status } from \"@nstream/domain\";\n\n/** @public */\nexport class RoomController extends TimeSeriesController {\n  readonly deckNumber: string;\n  readonly roomNumber: string;\n  readonly ecoMode: boolean = true;\n\n  constructor(nodeUri: string, ecoMode: boolean) {\n    super();\n    this.setKey(nodeUri);\n    const regexResult = /\\/ship\\/\\w+\\/deck\\/(\\d+)\\/room\\/(\\d+)/.exec(\n      nodeUri\n    ) ?? [null, \"\", \"\"];\n    this.deckNumber = regexResult[1];\n    this.roomNumber = regexResult[2];\n    this.ecoMode = ecoMode;\n  }\n\n  @ViewRef({\n    viewType: CellView,\n    viewKey: \"deck\",\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): CellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        },\n      });\n    },\n  })\n  readonly deckCell!: ViewRef<this, CellView>;\n\n  @ViewRef({\n    viewType: CellView,\n    viewKey: \"room\",\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): CellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        },\n      });\n    },\n  })\n  readonly roomCell!: ViewRef<this, CellView>;\n\n  @ViewRef({\n    viewType: CellView,\n    viewKey: \"hvacTemp\",\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): CellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        },\n      });\n    },\n  })\n  readonly hvacTempCell!: ViewRef<this, CellView>;\n\n  @ViewRef({\n    viewType: CellView,\n    viewKey: \"timeSinceOccupied\",\n    get parentView(): View | null {\n      return this.owner.leaf.insertView();\n    },\n    createView(): CellView {\n      return TextCellView.create().set({\n        style: {\n          color: Look.accentColor,\n        },\n      });\n    },\n  })\n  readonly timeSinceOccupiedCell!: ViewRef<this, CellView>;\n\n  @Property({\n    valueType: Value,\n    value: Value.absent(),\n    didSetValue(value: Value): void {\n      let moodStatus = RoomController.RoomStatusMood.get(\n        this.owner.ecoMode ? RoomStatus.ecoMode : RoomStatus.recentlyOccupied\n      );\n\n      // update content and mood of deckCell\n      const deckCellView = this.owner.deckCell.view as TextCellView | null;\n      if (deckCellView !== null) {\n        deckCellView.set({\n          content: this.owner.deckNumber,\n          classList: [\"deck-cell-view\"],\n        });\n        deckCellView.modifyMood(Feel.default, moodStatus!.moodModifier);\n      }\n\n      // update content and mood of roomCell\n      const roomCellView = this.owner.roomCell.view as TextCellView | null;\n      if (roomCellView !== null) {\n        roomCellView.set({\n          content: this.owner.roomNumber,\n          classList: [\"room-cell-view\"],\n        });\n        roomCellView.modifyMood(Feel.default, moodStatus!.moodModifier);\n      }\n\n      // update content and mood of hvacTempCell\n      const hvacTempCellView = this.owner.hvacTempCell\n        .view as TextCellView | null;\n      if (hvacTempCellView !== null) {\n        const hvacTempValue = value.get(\"hvacTemperature\").numberValue(0);\n        hvacTempCellView.set({\n          content: hvacTempValue.toString(),\n          classList: [\"hvac-temp-cell-view\"],\n        });\n        hvacTempCellView.modifyMood(Feel.default, moodStatus!.moodModifier);\n      }\n\n      // update content and mood of timeSinceOccupiedCell\n      const timeSinceOccupiedCellView = this.owner.timeSinceOccupiedCell\n        .view as TextCellView | null;\n      if (timeSinceOccupiedCellView !== null) {\n        const msSinceOccupied =\n          Date.now() - value.get(\"occupancyDetected\").numberValue(0);\n        const hoursSinceOccupied = Math.floor(msSinceOccupied / 1000 / 60 / 60);\n        const minutesSinceOccupied = Math.floor(\n          (msSinceOccupied / 1000 / 60) % 60\n        );\n        const secondsSinceOccupied = Math.floor((msSinceOccupied / 1000) % 60);\n        let content: string;\n        if (hoursSinceOccupied) {\n          content = `${hoursSinceOccupied}h ${minutesSinceOccupied}m ${secondsSinceOccupied}s`;\n        } else if (minutesSinceOccupied) {\n          content = `${minutesSinceOccupied}m ${secondsSinceOccupied}s`;\n        } else {\n          content = `${secondsSinceOccupied}s`;\n        }\n        timeSinceOccupiedCellView.set({\n          content,\n          classList: [\"time-in-processing-cell-view\"],\n        });\n        timeSinceOccupiedCellView.modifyMood(\n          Feel.default,\n          moodStatus!.moodModifier\n        );\n      }\n    },\n  })\n  readonly stats!: Property<this, Value>;\n\n  private static RoomStatusMood: Map<RoomStatus, Status> = new Map<\n    RoomStatus,\n    Status\n  >([\n    [RoomStatus.recentlyOccupied, Status.improving(0, 1, 2, 3, 4)(1.4)],\n    [RoomStatus.ecoMode, Status.improving(0, 1, 2, 3, 4)(3)],\n    //   [RoomStatus.readyForPickup, Status.improving(0, 1, 2, 3, 4)(3)],\n    //   [RoomStatus.pickupCompleted, Status.unknown()],\n  ]);\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { PanelView } from \"@swim/panel\";\nimport { TimeTableController } from \"@nstream/widget\";\nimport { View, ViewRef } from \"@swim/view\";\nimport { MapDownlink, ValueDownlink } from \"@swim/client\";\nimport { Value } from \"@swim/structure\";\nimport { TraitViewRef } from \"@swim/controller\";\nimport { Trait } from \"@swim/model\";\nimport { ColView, HeaderView, TextColView } from \"@swim/table\";\nimport { ColLayout, TableLayout, TableView } from \"@swim/table\";\nimport { Uri } from \"@swim/uri\";\nimport { Length } from \"@swim/math\";\nimport { Look } from \"@swim/theme\";\nimport { RoomController } from \"./RoomController\";\n\n/** @public */\nexport class RoomListController extends TimeTableController {\n  readonly listEcoMode: boolean;\n\n  constructor(listEcoMode: boolean) {\n    super();\n    this.setKey(\n      `RoomListController-${listEcoMode ? \"ecoMode\" : \"recentlyOccupied\"}`\n    );\n    this.listEcoMode = listEcoMode;\n  }\n\n  @TraitViewRef({\n    extends: true,\n    initView(panelView: PanelView): void {\n      super.initView(panelView);\n\n      // then table stuff\n      this.owner.tablePanel.insertView().set({\n        unitWidth: 1,\n        unitHeight: 1,\n        minFrameHeight: 0,\n        minFrameWidth: 0,\n        style: {\n          marginTop: 48,\n          marginBottom: 24,\n        },\n        classList: [\"rlc-table-panel\"],\n      });\n      this.owner.table.insertView(); // Insert the table when we insert this panel\n      this.owner.header.insertView(); // Insert the table's header when we insert this panel\n    },\n  })\n  override readonly panel!: TraitViewRef<this, Trait, PanelView> &\n    TimeTableController[\"panel\"];\n\n  @ViewRef({\n    extends: true,\n    createView(): HeaderView {\n      const headerView = super.createView() as HeaderView;\n      this.owner.deckCol.insertView(headerView);\n      this.owner.roomCol.insertView(headerView);\n      this.owner.hvacTempCol.insertView(headerView);\n      this.owner.timeInProcessingCol.insertView(headerView);\n      return headerView;\n    },\n  })\n  override readonly header!: ViewRef<this, HeaderView> &\n    TimeTableController[\"header\"];\n\n  @ViewRef({\n    extends: true,\n    initView(tablePanelView: PanelView): void {\n      super.initView(tablePanelView);\n      tablePanelView.set({\n        style: {\n          margin: 0,\n          marginTop: 36,\n        },\n      });\n    },\n  })\n  override readonly tablePanel!: ViewRef<this, PanelView> &\n    TimeTableController[\"tablePanel\"];\n\n  @ViewRef({\n    extends: true,\n    createLayout(): TableLayout {\n      const cols = new Array<ColLayout>();\n      cols.push(\n        ColLayout.create(\"deck\", 1, 1, \"100px\", false, false, Look.accentColor)\n      );\n      cols.push(\n        ColLayout.create(\"room\", 1, 1, \"100px\", false, false, Look.accentColor)\n      );\n      cols.push(\n        ColLayout.create(\n          \"hvacTemp\",\n          1,\n          1,\n          \"100px\",\n          false,\n          false,\n          Look.accentColor\n        )\n      );\n      cols.push(\n        ColLayout.create(\n          \"timeSinceOccupied\",\n          2,\n          2,\n          \"144px\",\n          false,\n          false,\n          Look.accentColor\n        )\n      );\n      return new TableLayout(null, null, null, Length.px(12), cols);\n    },\n  })\n  override readonly table!: ViewRef<this, TableView> &\n    TimeTableController[\"table\"];\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"deck\",\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"Deck\",\n      });\n    },\n  })\n  readonly deckCol!: ViewRef<this, ColView>;\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"room\",\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"Stateroom\",\n      });\n    },\n  })\n  readonly roomCol!: ViewRef<this, ColView>;\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"hvacTemp\",\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"HVAC Temp\",\n      });\n    },\n  })\n  readonly hvacTempCol!: ViewRef<this, ColView>;\n\n  @ViewRef({\n    viewType: ColView,\n    viewKey: \"timeSinceOccupied\",\n    get parentView(): View | null {\n      return this.owner.header.attachView();\n    },\n    createView(): ColView {\n      return TextColView.create().set({\n        label: \"Time Since Occupied\",\n      });\n    },\n  })\n  readonly timeInProcessingCol!: ViewRef<this, ColView>;\n\n  @MapDownlink({\n    laneUri: \"stateRooms\",\n    keyForm: Uri.form(),\n    consumed: true,\n    didUpdate(nodeUri: Uri, value: Value): void {\n      let roomController = this.owner.getChild(\n        nodeUri.pathName,\n        RoomController\n      );\n      let ecoModeEnabled = value.get(\"ecoModeEnabled\").booleanValue(false);\n\n      if (\n        roomController === null &&\n        this.owner.listEcoMode === ecoModeEnabled\n      ) {\n        // create new RoomController (row in list)\n        roomController = new RoomController(\n          nodeUri.toString(),\n          this.owner.listEcoMode\n        );\n\n        // insert leaf of RoomController (row)\n        roomController.leaf.insertView().set({\n          style: {\n            cursor: \"pointer\",\n          },\n        });\n\n        // insert cells into row\n        roomController.deckCell.insertView();\n        roomController.roomCell.insertView();\n        roomController.hvacTempCell.insertView();\n        roomController.timeSinceOccupiedCell.insertView();\n\n        // call .stats() method on controller to populate cells\n        roomController.stats.set(value);\n\n        // add newly created controller this this.series ControllerSet\n        this.owner.series.addController(roomController, null, nodeUri.pathName);\n      }\n\n      // remove roomController if its status does not fit this column anymore\n      if (\n        roomController !== null &&\n        this.owner.listEcoMode !== ecoModeEnabled\n      ) {\n        this.owner.removeChild(nodeUri.pathName);\n      }\n    },\n    didRemove(nodeUri: Uri) {\n      // When an room is removed in the backend, remove it from the list\n      this.owner.removeChild(nodeUri.pathName);\n    },\n  })\n  readonly roomDownlink!: MapDownlink<this, Uri, Value>;\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Trait, TraitRef } from \"@swim/model\";\nimport { TraitViewRef } from \"@swim/controller\";\nimport { PanelView, BoardView, BoardController } from \"@swim/panel\";\nimport { EntityTrait } from \"@nstream/domain\";\nimport { RoomListController } from \"../room\";\nimport { RoomStatus } from \"../types\";\n\n/** @public */\nexport class DeckBoardController extends BoardController {\n  constructor() {\n    super();\n    this.initBoard();\n  }\n\n  protected initBoard(): void {\n    const boardView = this.sheet.attachView();\n    const rootPanelView = boardView.appendChild(PanelView).style.set({\n      margin: 6,\n    });\n\n    // The deck board consists of 2 panels of rooms (the same except they have different statuses)\n    // Each panel takes up the full height of the sheet and 1/2 of the width\n    // We insert each widget by inserting each controller's 'panel'\n\n    const recentlyOccupiedListController = this.appendChild(\n      new RoomListController(false),\n      `List${RoomStatus.recentlyOccupied}`\n    );\n    recentlyOccupiedListController.panel.insertView(rootPanelView).set({\n      unitWidth: 1 / 2,\n      unitHeight: 1,\n      style: {\n        margin: 6,\n      },\n      headerTitle: \"Recently Occupied Staterooms\",\n    });\n\n    const ecoModeListController = this.appendChild(\n      new RoomListController(true),\n      `List${RoomStatus.ecoMode}`\n    );\n    ecoModeListController.panel.insertView(rootPanelView).set({\n      unitWidth: 1 / 2,\n      unitHeight: 1,\n      style: {\n        margin: 6,\n      },\n      headerTitle: \"Staterooms in EcoMode\",\n    });\n  }\n\n  @TraitViewRef({\n    extends: true,\n    viewDidMount(boardView: BoardView): void {\n      this.owner.consume(boardView);\n    },\n    viewWillUnmount(boardView: BoardView): void {\n      this.owner.unconsume(boardView);\n    },\n  })\n  override readonly sheet!: TraitViewRef<this, Trait, BoardView> &\n    BoardController[\"sheet\"];\n\n  @TraitRef({\n    traitType: EntityTrait,\n    inherits: true,\n    initTrait(entityTrait: EntityTrait): void {\n      this.owner.hostUri.bindInlet(entityTrait.hostUri);\n      this.owner.nodeUri.bindInlet(entityTrait.nodeUri);\n    },\n  })\n  readonly entity!: TraitRef<this, EntityTrait>;\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Lazy } from \"@swim/util\";\nimport type { Graphics } from \"@swim/graphics\";\nimport { VectorIcon } from \"@swim/graphics\";\nimport type { SheetController } from \"@swim/sheet\";\nimport { AspectTrait } from \"@nstream/domain\";\nimport { DeckBoardController } from \"./DeckBoardController\";\n\n/** @public */\nexport class DeckAspectTrait extends AspectTrait {\n  constructor() {\n    super();\n    this.id.setIntrinsic(\"portal\");\n    this.title.setIntrinsic(\"Portal\");\n    this.icon.setIntrinsic(DeckAspectTrait.icon);\n  }\n\n  // Define the board controller to be used that will control all the widgets/cards the deck will have\n  // We will use the 'DeckBoardController' which is 2 panels showing the statuses of rooms\n  override createTabController(): SheetController | null {\n    return new DeckBoardController();\n  }\n\n  // The icon to show the 'portal' (at the top - alternative to atlas)\n  @Lazy\n  static get icon(): Graphics {\n    return VectorIcon.create(\n      24,\n      24,\n      \"M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z\"\n    );\n  }\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\nimport {Class, Lazy} from \"@swim/util\";\nimport { EntityTrait, EntityTraitObserver } from \"@nstream/domain\";\nimport { Model, TraitModelRef } from \"@swim/model\";\nimport { RoomsRelationTrait } from \"../room/RoomsRelationTrait\";\nimport { Graphics, PolygonIcon } from \"@swim/graphics\";\nimport { DeckAspectTrait } from \"./DeckAspectTrait\";\n\n/** @public */\nexport interface DeckEntityTraitObserver<T extends DeckEntityTrait = DeckEntityTrait> extends EntityTraitObserver<T> {\n}\n\n/** @public */\nexport class DeckEntityTrait extends EntityTrait {\n  constructor() {\n    super();\n    this.icon.setIntrinsic(DeckEntityTrait.icon);\n  }\n\n  override readonly observerType?: Class<DeckEntityTraitObserver>;\n\n  // Aspect/Portal trait showing that this entity will have a board of widgets/cards\n  @TraitModelRef({\n    modelType: Model,\n    modelKey: \"portal\",\n    traitType: DeckAspectTrait,\n    traitKey: \"aspect\",\n  })\n  readonly portal!: TraitModelRef<this, DeckAspectTrait>;\n\n  // Relation trait showing that this entity will have a list of rooms that can be traversed to on the left\n  @TraitModelRef({\n    modelType: Model,\n    modelKey: \"rooms\",\n    traitType: RoomsRelationTrait,\n    traitKey: \"relation\",\n  })\n  readonly roomsRelation!: TraitModelRef<this, RoomsRelationTrait>;\n\n  // The icon of the entity, will be used in the navigation on the left\n  @Lazy\n  static get icon(): Graphics {\n    return PolygonIcon.create(3);\n  }\n\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Strings, Observes, Numbers } from \"@swim/util\";\nimport { type Value } from \"@swim/structure\";\nimport { MapDownlink } from \"@swim/client\";\nimport { TraitModelSet } from \"@swim/model\";\nimport { RelationTrait } from \"@nstream/domain\";\nimport { DeckEntityTrait } from \"./DeckEntityTrait\";\nimport { Uri } from \"@swim/uri\";\n\n/** @public */\nexport class DecksRelationTrait extends RelationTrait<DeckEntityTrait> {\n  constructor() {\n    super();\n    this.title.setIntrinsic(\"Decks\");\n    this.id.setIntrinsic(\"deck\");\n  }\n\n  @TraitModelSet({\n    extends: true,\n    traitType: DeckEntityTrait,\n    observesTrait: true,\n    sorted: true,\n    initTrait(deckTrait: DeckEntityTrait): void {\n      // Create the deck entity\n      const deckId = deckTrait.id.value!;\n      deckTrait.title.setIntrinsic(`Deck ${deckId}`);\n      deckTrait.nodeUri.setIntrinsic(\"/ship/icon/deck/\" + deckId);\n      // Insert the portal (board of widgets) and the roomsRelation (list of rooms to navigate to) into the deck entity\n      deckTrait.portal.insertModel();\n      deckTrait.roomsRelation.insertModel();\n    },\n    compareTraits(a: DeckEntityTrait, b: DeckEntityTrait): number {\n      // Sort the deck navigation by deck number\n      return Numbers.compare(\n        Number.parseInt(a.id.value ?? \"0\"),\n        Number.parseInt(b.id.value ?? \"0\")\n      );\n    },\n  })\n  override readonly entities!: TraitModelSet<this, DeckEntityTrait> &\n    RelationTrait<DeckEntityTrait>[\"entities\"] &\n    Observes<DeckEntityTrait>;\n\n  // Open a downlink to the backend to get the map of decks, we can use this to create the navigation list\n  // The nodeUri of the downlink is inferred from the parent (the ship)\n  @MapDownlink({\n    laneUri: \"decks\",\n    keyForm: Uri.form(),\n    consumed: true,\n    didUpdate(nodeUri: Uri, status: Value): void {\n      // If there is a new deck then insert it into the relation/navigation\n      let deckTrait = this.owner.entities.get(nodeUri.pathName);\n      if (deckTrait === null) {\n        deckTrait = this.owner.entities.createTrait(nodeUri.pathName);\n        deckTrait.nodeUri.set(nodeUri);\n        this.owner.entities.addTrait(deckTrait);\n      }\n    },\n    didRemove(nodeUri: Uri, status: Value): void {\n      // When a deck is removed in the backend, remove it from the navigation/relation\n      this.owner.removeChild(nodeUri.pathName);\n    },\n  })\n  readonly decks!: MapDownlink<this, Uri, Value>;\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\n\nimport { Lazy } from \"@swim/util\";\nimport type { Graphics } from \"@swim/graphics\";\nimport { VectorIcon } from \"@swim/graphics\";\nimport type { SheetController } from \"@swim/sheet\";\nimport { AspectTrait } from \"@nstream/domain\";\nimport { DeckBoardController } from \"../deck\";\n\n/** @public */\nexport class ShipAspectTrait extends AspectTrait {\n  constructor() {\n    super();\n    this.id.setIntrinsic(\"portal\");\n    this.title.setIntrinsic(\"Portal\");\n    this.icon.setIntrinsic(ShipAspectTrait.icon);\n  }\n\n  // Define the board controller to be used that will control all the widgets/cards the ship will have\n  // We will use the 'DeckBoardController' which is 2 panels showing the statuses of a deck's rooms\n  override createTabController(): SheetController | null {\n    return new DeckBoardController().set({\n      nodeUri: \"/ship/icon/deck/3\",\n    });\n  }\n\n  // The icon to show the 'portal' (at the top - alternative to atlas)\n  @Lazy\n  static get icon(): Graphics {\n    return VectorIcon.create(\n      24,\n      24,\n      \"M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z\"\n    );\n  }\n}\n","// Copyright 2015-2022 Swim.inc\n// All rights reserved.\nimport {Class} from \"@swim/util\";\nimport { EntityTrait, EntityTraitObserver } from \"@nstream/domain\";\nimport { DecksRelationTrait } from \"../deck\";\nimport { Model, TraitModelRef } from \"@swim/model\";\nimport { ShipAspectTrait } from \"./ShipAspectTrait\";\n\n/** @public */\nexport interface ShipEntityTraitObserver<T extends ShipEntityTrait = ShipEntityTrait> extends EntityTraitObserver<T> {\n}\n\n/** @public */\nexport class ShipEntityTrait extends EntityTrait {\n  constructor() {\n    super();\n    this.title.setIntrinsic(\"ship/icon\");\n  }\n\n  declare readonly observerType?: Class<ShipEntityTraitObserver>;\n\n  // Aspect/Portal trait showing that this entity will have a board of widgets/cards\n  @TraitModelRef({\n    modelType: Model,\n    modelKey: \"portal\",\n    traitType: ShipAspectTrait,\n    traitKey: \"aspect\",\n  })\n  readonly portal!: TraitModelRef<this, ShipAspectTrait>;\n\n  // Relation trait showing that this entity will have a list of decks that can be traversed to on the left\n  @TraitModelRef({\n    modelType: Model,\n    modelKey: \"decks\",\n    traitType: DecksRelationTrait,\n    traitKey: \"relation\",\n  })\n  readonly decksRelation!: TraitModelRef<this, DecksRelationTrait>;\n\n}\n"],"names":["__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","_","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__runInitializers","thisArg","value","useValue","arguments","call","SuppressedError","error","suppressed","message","e","Error","RoomDetailsController","TimeTableController","_a","_classSuper","constructor","super","this","detailsContainer","_instanceExtraInitializers","_detailsContainer_initializers","shipCode","_shipCode_initializers","deckNumber","_deckNumber_initializers","roomNumber","_roomNumber_initializers","hvacUnit","_hvacUnit_initializers","hvacZone","_hvacZone_initializers","infoDownlink","_infoDownlink_initializers","initView","query","window","location","search","urlParams","URLSearchParams","host","baseUri","Uri","parse","document","href","base","withScheme","schemeName","toString","setHostUri","panel","insertView","_detailsContainer_decorators","ViewRef","viewType","HtmlView","extends","parentView","owner","attachView","createView","divView","createElement","style","margin","classList","shipCodeView","appendChild","marginTop","marginBottom","fontSize","fontFamily","node","innerText","valueOf","deckNumberView","roomNumberView","hvacUnitView","hvacZoneView","_shipCode_decorators","Property","valueType","String","_deckNumber_decorators","_roomNumber_decorators","_hvacUnit_decorators","_hvacZone_decorators","_infoDownlink_decorators","ValueDownlink","laneUri","consumed","didSet","_b","view","getChild","setValue","stringValue","static","private","has","obj","metadata","_metadata","RoomBoardController","BoardController","sheet","_sheet_initializers","_panel_initializers","entity","_entity_initializers","initBoard","rootPanelView","roomDetailsController","_sheet_decorators","TraitViewRef","viewDidMount","boardView","consume","viewWillUnmount","unconsume","_panel_decorators","PanelView","create","backgroundColor","_entity_decorators","TraitRef","traitType","EntityTrait","inherits","initTrait","entityTrait","hostUri","bindInlet","nodeUri","RoomAspectTrait","AspectTrait","id","setIntrinsic","title","icon","createTabController","VectorIcon","Lazy","_static_get_icon_decorators","_staticExtraInitializers","RoomEntityTrait","observerType","portal","_portal_initializers","_portal_decorators","TraitModelRef","modelType","Model","modelKey","traitKey","RoomsRelationTrait","RelationTrait","entities","_entities_initializers","rooms","_rooms_initializers","_entities_decorators","TraitModelSet","observesTrait","sorted","roomTrait","roomId","roomTraitNodeUri","insertModel","compareTraits","a","b","Numbers","compare","Number","parseInt","_c","_rooms_decorators","MapDownlink","keyForm","form","didUpdate","status","pathName","createTrait","addTrait","didRemove","removeChild","OrderType","RoomStatus","RoomController","TimeSeriesController","ecoMode","deckCell","_deckCell_initializers","roomCell","_roomCell_initializers","hvacTempCell","_hvacTempCell_initializers","timeSinceOccupiedCell","_timeSinceOccupiedCell_initializers","stats","_stats_initializers","setKey","regexResult","exec","_deckCell_decorators","CellView","viewKey","leaf","TextCellView","color","Look","accentColor","_roomCell_decorators","_hvacTempCell_decorators","_timeSinceOccupiedCell_decorators","_stats_decorators","Value","absent","didSetValue","moodStatus","RoomStatusMood","recentlyOccupied","deckCellView","content","modifyMood","Feel","default","moodModifier","roomCellView","hvacTempCellView","hvacTempValue","numberValue","timeSinceOccupiedCellView","msSinceOccupied","Date","now","hoursSinceOccupied","Math","floor","minutesSinceOccupied","secondsSinceOccupied","Map","Status","improving","RoomListController","listEcoMode","header","_header_initializers","tablePanel","_tablePanel_initializers","table","_table_initializers","deckCol","_deckCol_initializers","roomCol","_roomCol_initializers","hvacTempCol","_hvacTempCol_initializers","timeInProcessingCol","_timeInProcessingCol_initializers","roomDownlink","_roomDownlink_initializers","panelView","unitWidth","unitHeight","minFrameHeight","minFrameWidth","_header_decorators","headerView","_tablePanel_decorators","tablePanelView","_table_decorators","createLayout","cols","Array","ColLayout","TableLayout","Length","px","_deckCol_decorators","ColView","TextColView","label","_roomCol_decorators","_hvacTempCol_decorators","_timeInProcessingCol_decorators","_roomDownlink_decorators","roomController","ecoModeEnabled","booleanValue","cursor","series","addController","DeckBoardController","recentlyOccupiedListController","headerTitle","ecoModeListController","DeckAspectTrait","DeckEntityTrait","roomsRelation","_roomsRelation_initializers","PolygonIcon","_roomsRelation_decorators","DecksRelationTrait","decks","_decks_initializers","deckTrait","deckId","_decks_decorators","ShipAspectTrait","ShipEntityTrait","decksRelation","_decksRelation_initializers","_decksRelation_decorators"],"mappings":"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"}